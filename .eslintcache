[{"/home/renz/Desktop/Projects/task-schedule/src/App.js":"1","/home/renz/Desktop/Projects/task-schedule/src/reducers/TaskReducer.js":"2","/home/renz/Desktop/Projects/task-schedule/src/util/Auth.js":"3","/home/renz/Desktop/Projects/task-schedule/src/actions/task.js":"4","/home/renz/Desktop/Projects/task-schedule/src/store/configStore.js":"5","/home/renz/Desktop/Projects/task-schedule/src/util/login.js":"6","/home/renz/Desktop/Projects/task-schedule/src/index.js":"7","/home/renz/Desktop/Projects/task-schedule/src/api/task.js":"8","/home/renz/Desktop/Projects/task-schedule/src/components/Task.js":"9","/home/renz/Desktop/Projects/task-schedule/src/components/TaskForm.js":"10","/home/renz/Desktop/Projects/task-schedule/src/util/interceptor.js":"11"},{"size":407,"mtime":1607661862777,"results":"12","hashOfConfig":"13"},{"size":775,"mtime":1607668420039,"results":"14","hashOfConfig":"13"},{"size":915,"mtime":1607690205742,"results":"15","hashOfConfig":"13"},{"size":2798,"mtime":1607670214348,"results":"16","hashOfConfig":"13"},{"size":457,"mtime":1607656086360,"results":"17","hashOfConfig":"13"},{"size":573,"mtime":1607662920965,"results":"18","hashOfConfig":"13"},{"size":270,"mtime":1607576298819,"results":"19","hashOfConfig":"13"},{"size":562,"mtime":1607668379972,"results":"20","hashOfConfig":"13"},{"size":4476,"mtime":1607673251530,"results":"21","hashOfConfig":"13"},{"size":5389,"mtime":1607684476236,"results":"22","hashOfConfig":"13"},{"size":348,"mtime":1607659608181,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wjf3k7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/home/renz/Desktop/Projects/task-schedule/src/App.js",[],["52","53"],"/home/renz/Desktop/Projects/task-schedule/src/reducers/TaskReducer.js",["54"],"const taskReducerDefaultState = []\n\nexport default (state = taskReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD_TASK\":\n            return [...state, action.task_payload]\n        case \"FETCH_TASKS\":\n            return [...action.task_payload]\n        case \"REMOVE_TASK\":\n            return state.filter(({ id }) => id !== action.id)\n\n        case \"EDIT_TASK\":\n            return state.map((task_payload) => {\n                if (task_payload.id === action.id) {\n                    return {\n                        ...task_payload,\n                        ...action.updates,\n                    }\n                } else {\n                    return task_payload\n                }\n            })\n        default:\n            return state\n    }\n}\n",["55","56"],"/home/renz/Desktop/Projects/task-schedule/src/util/Auth.js",[],"/home/renz/Desktop/Projects/task-schedule/src/actions/task.js",[],"/home/renz/Desktop/Projects/task-schedule/src/store/configStore.js",["57"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport TaskReducer from \"../reducers/TaskReducer\"\nimport thunk from \"redux-thunk\"\n\nexport default () => {\n    const composeEnhancer =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        combineReducers({\n            task_payload: TaskReducer,\n        }),\n        composeEnhancer(applyMiddleware(thunk))\n    )\n    return store\n}\n","/home/renz/Desktop/Projects/task-schedule/src/util/login.js",[],"/home/renz/Desktop/Projects/task-schedule/src/index.js",[],["58","59"],"/home/renz/Desktop/Projects/task-schedule/src/api/task.js",[],"/home/renz/Desktop/Projects/task-schedule/src/components/Task.js",[],"/home/renz/Desktop/Projects/task-schedule/src/components/TaskForm.js",[],"/home/renz/Desktop/Projects/task-schedule/src/util/interceptor.js",["60"],"import axios from \"axios\"\nconst token = JSON.parse(localStorage.getItem(\"login\"))\nexport default () => {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n}\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":26,"endColumn":2},{"ruleId":"61","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":1,"nodeType":"67","endLine":15,"endColumn":2},{"ruleId":"61","replacedBy":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":14,"endColumn":2},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["72"],["73"],["72"],["73"],"no-global-assign","no-unsafe-negation"]