[{"/home/renz/Desktop/Projects/task-schedule/src/App.js":"1","/home/renz/Desktop/Projects/task-schedule/src/reducers/TaskReducer.js":"2","/home/renz/Desktop/Projects/task-schedule/src/util/Auth.js":"3","/home/renz/Desktop/Projects/task-schedule/src/actions/task.js":"4","/home/renz/Desktop/Projects/task-schedule/src/store/configStore.js":"5","/home/renz/Desktop/Projects/task-schedule/src/util/login.js":"6","/home/renz/Desktop/Projects/task-schedule/src/index.js":"7","/home/renz/Desktop/Projects/task-schedule/src/api/task.js":"8","/home/renz/Desktop/Projects/task-schedule/src/components/Task.js":"9","/home/renz/Desktop/Projects/task-schedule/src/components/TaskForm.js":"10","/home/renz/Desktop/Projects/task-schedule/src/util/interceptor.js":"11"},{"size":487,"mtime":1607652938095,"results":"12","hashOfConfig":"13"},{"size":851,"mtime":1607656206413,"results":"14","hashOfConfig":"13"},{"size":840,"mtime":1607618241482,"results":"15","hashOfConfig":"13"},{"size":2176,"mtime":1607659908074,"results":"16","hashOfConfig":"13"},{"size":457,"mtime":1607656086360,"results":"17","hashOfConfig":"13"},{"size":573,"mtime":1607618222144,"results":"18","hashOfConfig":"13"},{"size":270,"mtime":1607576298819,"results":"19","hashOfConfig":"13"},{"size":1086,"mtime":1607658324770,"results":"20","hashOfConfig":"13"},{"size":4217,"mtime":1607659109879,"results":"21","hashOfConfig":"13"},{"size":5128,"mtime":1607620280197,"results":"22","hashOfConfig":"13"},{"size":348,"mtime":1607659608181,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wjf3k7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/renz/Desktop/Projects/task-schedule/src/App.js",["50","51"],"/home/renz/Desktop/Projects/task-schedule/src/reducers/TaskReducer.js",["52"],"/home/renz/Desktop/Projects/task-schedule/src/util/Auth.js",["53"],"import React, { useEffect, useState } from \"react\"\nimport { login } from \"../util/login\"\nimport { getUser } from \"../api/task\"\n\nexport const AuthContext = React.createContext()\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const [pending, setPending] = useState(true)\n    const payload = {\n        email: \"spicebluetest1@gmail.com\",\n        password: \"12345678\",\n    }\n\n    useEffect(() => {\n        if (login(payload)) {\n            getUser().then((result) => {\n                setCurrentUser(result)\n                setPending(false)\n            })\n        }\n    }, [])\n\n    if (pending) {\n        return <div className=\"loader\"></div>\n    }\n\n    return (\n        <AuthContext.Provider value={{ currentUser }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","/home/renz/Desktop/Projects/task-schedule/src/actions/task.js",[],["54","55"],"/home/renz/Desktop/Projects/task-schedule/src/store/configStore.js",["56"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport TaskReducer from \"../reducers/TaskReducer\"\nimport thunk from \"redux-thunk\"\n\nexport default () => {\n    const composeEnhancer =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        combineReducers({\n            task_payload: TaskReducer,\n        }),\n        composeEnhancer(applyMiddleware(thunk))\n    )\n    return store\n}\n","/home/renz/Desktop/Projects/task-schedule/src/util/login.js",[],"/home/renz/Desktop/Projects/task-schedule/src/index.js",[],"/home/renz/Desktop/Projects/task-schedule/src/api/task.js",[],"/home/renz/Desktop/Projects/task-schedule/src/components/Task.js",["57"],"import { React, Component } from \"react\"\nimport TaskForm from \"./TaskForm\"\nimport {\n    addTask,\n    removeTask,\n    editTask,\n    fetchTask,\n    deleteTask,\n} from \"../actions/task\"\n\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\"\n\nimport { connect } from \"react-redux\"\n\nclass Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggleForm: false,\n            selectedTask: {},\n        }\n    }\n\n    handleShowForm = () => {\n        this.setState({\n            toggleForm: true,\n        })\n    }\n\n    handleEdit = (id) => {\n        const selectedTask = this.props.task_payload.find(\n            (task) => task.id === id\n        )\n        this.setState({\n            selectedTask,\n            toggleForm: true,\n        })\n    }\n    handleRemove = (id) => {\n        this.props.deleteTask(id)\n    }\n    componentDidMount() {\n        this.props.fetchTask()\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"main-container\">\n                    <div className=\"first-container\">\n                        <div className=\"task-count\">\n                            <h4>Tasks</h4> {this.props.task_payload.length}\n                        </div>\n                        <div className=\"task-button\">\n                            <button onClick={this.handleShowForm}>\n                                Add Task\n                            </button>\n                        </div>\n                    </div>\n\n                    {!this.state.toggleForm ? (\n                        <div></div>\n                    ) : (\n                        <TaskForm\n                            task={this.state.selectedTask}\n                            toggleClosed={(val) => this.setState(val)}\n                            onSubmit={(task_payload) => {\n                                Object.keys(this.state.selectedTask).length ===\n                                0\n                                    ? this.props.dispatch(addTask(task_payload))\n                                    : this.props.dispatch(\n                                          editTask(\n                                              task_payload.id,\n                                              task_payload\n                                          )\n                                      )\n                            }}\n                        />\n                    )}\n\n                    <div className=\"task-lists-container\">\n                        <div className=\"task-lists\">\n                            {this.props.task_payload.map((val, index) => (\n                                <div className=\"list\" key={index}>\n                                    <label>{val.task_msg}</label>\n                                    <label>{val.task_date}</label>\n\n                                    <button\n                                        className=\"list-edit-btn\"\n                                        onClick={() => this.handleEdit(val.id)}\n                                    >\n                                        <PencilSquare />\n                                    </button>\n                                    <button\n                                        className=\"list-delete-btn\"\n                                        onClick={() =>\n                                            this.handleRemove(val.id)\n                                        }\n                                    >\n                                        <Trash />\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        task_payload: state.task_payload,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // This function will be available in component as `this.props.fetchTask`\n        fetchTask: function () {\n            dispatch(fetchTask())\n        },\n        deleteTask: function (id) {\n            dispatch(deleteTask(id))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)\n","/home/renz/Desktop/Projects/task-schedule/src/components/TaskForm.js",[],"/home/renz/Desktop/Projects/task-schedule/src/util/interceptor.js",["58"],{"ruleId":"59","severity":1,"message":"60","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":20},{"ruleId":"59","severity":1,"message":"63","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":4,"column":1,"nodeType":"66","endLine":28,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":22,"column":8,"nodeType":"69","endLine":22,"endColumn":10,"suggestions":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":15,"endColumn":2},{"ruleId":"59","severity":1,"message":"75","line":5,"column":5,"nodeType":"61","messageId":"62","endLine":5,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":3,"column":1,"nodeType":"66","endLine":14,"endColumn":2},"no-unused-vars","'getAllTask' is defined but never used.","Identifier","unusedVar","'addTask' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'payload'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'removeTask' is defined but never used.",{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [payload]",{"range":"81","text":"82"},[632,634],"[payload]"]