{"version":3,"sources":["api/task.js","reducers/TaskReducer.js","util/interceptor.js","actions/task.js","components/TaskForm.js","components/Task.js","util/login.js","util/Auth.js","App.js","store/configStore.js","index.js"],"names":["apiURL","token","JSON","parse","localStorage","getItem","a","axios","interceptors","request","use","config","headers","authorization","error","Promise","reject","get","res","data","results","console","log","postTask","payload","post","taskReducerDefaultState","state","action","type","task_payload","filter","id","map","updates","TaskForm","props","onDescriptionChange","e","task_msg","target","value","setState","onDateChange","task_date","onTimeChange","task_time","onAssignedUser","assigned_user","onFocusChange","focused","calendarFocused","onSubmit","preventDefault","format","valueOf","toggleClosed","toggleForm","onCancel","task","moment","className","this","style","color","name","placeholder","autoFocus","onChange","date","numberOfMonths","onClick","Component","Task","handleShowForm","handleEdit","selectedTask","find","handleRemove","deleteTask","fetchTask","length","val","Object","keys","dispatch","uuid","addTask","index","connect","delete","Accept","setItem","stringify","login","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","email","password","useEffect","getUser","then","result","Provider","store","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","TaskReducer","applyMiddleware","thunk","configStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c0ef8a5.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst apiURL = \"https://stage.api.sloovi.com\"\nconst token = JSON.parse(localStorage.getItem(\"login\"))\nexport async function getUser() {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n\n    try {\n        const res = await axios.get(`${apiURL}/user`)\n\n        return res.data.results\n    } catch (error) {\n        console.log(\"Error.\")\n    }\n}\n\nexport async function postTask(payload) {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n\n    try {\n        const res = await axios.post(\n            `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4`,\n            payload\n        )\n\n        return res.data.results\n    } catch (error) {\n        console.log(\"Error.\")\n    }\n}\n","import { postTask } from \"../api/task\"\nconst taskReducerDefaultState = []\n\nexport default (state = taskReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD_TASK\":\n            postTask(action.payload)\n            return [...state, action.task_payload]\n        case \"FETCH_TASKS\":\n            return [...action.task_payload]\n        case \"REMOVE_TASK\":\n            return state.filter(({ id }) => id !== action.id)\n\n        case \"EDIT_TASK\":\n            return state.map((task_payload) => {\n                if (task_payload.id === action.id) {\n                    return {\n                        ...task_payload,\n                        ...action.updates,\n                    }\n                } else {\n                    return task_payload\n                }\n            })\n        default:\n            return state\n    }\n}\n","import axios from \"axios\"\nconst token = JSON.parse(localStorage.getItem(\"login\"))\nexport default () => {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n}\n","// ADD Task\nimport { v1 as uuid } from \"uuid\"\nimport axios from \"axios\"\nimport interceptor from \"../util/interceptor\"\nconst apiURL = \"https://stage.api.sloovi.com\"\n\ninterceptor()\nexport const addTask = ({\n    id = uuid(),\n    assigned_user = \"\",\n    task_date = \"\",\n    task_time = 0,\n    task_msg = \"\",\n} = {}) => ({\n    type: \"ADD_TASK\",\n    task_payload: {\n        id,\n        assigned_user,\n        task_date,\n        task_time,\n        task_msg,\n    },\n})\n// REMOVE Task\nexport const removeTask = ({ id } = {}) => ({\n    type: \"REMOVE_TASK\",\n    id,\n})\n\nexport const editTask = (id, updates) => ({\n    type: \"EDIT_TASK\",\n    id,\n    updates,\n})\n\nexport function fetchTask() {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.get(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4`\n            )\n            dispatch({\n                type: \"FETCH_TASKS\",\n                task_payload: res.data.results,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n\nexport function postTask(payload) {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.post(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4`,\n                payload\n            )\n            dispatch({\n                type: \"ADD_TASK\",\n                task_payload: payload,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n\nexport function deleteTask(id) {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.delete(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4/${id}`\n            )\n            dispatch({\n                type: \"REMOVE_TASK\",\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n","import React, { Component } from \"react\"\nimport { SingleDatePicker } from \"react-dates\"\nimport moment from \"moment\"\n\nimport \"react-dates/lib/css/_datepicker.css\"\nimport \"react-dates/initialize\"\n\nexport class TaskForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.task ? props.task.id : \"\",\n            task_msg: props.task ? props.task.task_msg : \"\",\n            task_date: props.task ? moment(props.task.task_date) : moment(),\n            task_time: props.task ? props.task.task_time : \"\",\n            assigned_user: props.task ? props.task.assigned_user : \"\",\n            calendarFocused: false,\n        }\n    }\n    onDescriptionChange = (e) => {\n        const task_msg = e.target.value\n        this.setState(() => ({ task_msg }))\n    }\n    onDateChange = (task_date) => {\n        if (task_date) {\n            this.setState(() => ({ task_date }))\n        }\n    }\n    onTimeChange = (e) => {\n        const task_time = e.target.value\n        this.setState(() => ({ task_time }))\n    }\n\n    onAssignedUser = (e) => {\n        const assigned_user = e.target.value\n        this.setState(() => ({ assigned_user }))\n    }\n\n    onFocusChange = ({ focused }) => {\n        this.setState(() => ({ calendarFocused: focused }))\n    }\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!this.state.task_date || !this.state.task_time) {\n            this.setState(() => ({\n                error: \"Please provide date and time.\",\n            }))\n        } else {\n            this.setState(() => ({ error: \"\" }))\n            console.log(\"Form submitted!\")\n\n            this.props.onSubmit({\n                id: this.state.id,\n                task_date: this.state.task_date.format(\"YYYY-MM-DD\"),\n                task_msg: this.state.task_msg,\n                task_time: this.state.task_time.valueOf(),\n                assigned_user: this.state.assigned_user,\n            })\n            this.props.toggleClosed({\n                toggleForm: false,\n            })\n            this.setState(() => ({}))\n        }\n    }\n    onCancel = () => {\n        this.props.toggleClosed({\n            toggleForm: false,\n        })\n        this.setState(() => ({}))\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"task-form-container\">\n                    {this.state.error && (\n                        <p style={{ color: \"red\" }}>{this.state.error}</p>\n                    )}\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"desc-container\">\n                            <label>Task Description</label>\n                            <input\n                                type=\"test\"\n                                name=\"task_msg\"\n                                placeholder=\"Description\"\n                                autoFocus\n                                onChange={this.onDescriptionChange}\n                                value={this.state.task_msg}\n                            />\n                        </div>\n                        <div className=\"date-time-container\">\n                            <div className=\"date-container\">\n                                <label>Date</label>\n                                <SingleDatePicker\n                                    date={this.state.task_date}\n                                    onDateChange={this.onDateChange}\n                                    focused={this.state.calendarFocused}\n                                    onFocusChange={this.onFocusChange}\n                                    numberOfMonths={1}\n                                />\n                            </div>\n                            <div className=\"time-container\">\n                                <label>Time</label>\n                                <input\n                                    type=\"time\"\n                                    name=\"task_time\"\n                                    placeholder=\"Time\"\n                                    onChange={this.onTimeChange}\n                                    value={this.state.task_time}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"assign-user-container\">\n                            <label>Assign User</label>\n                            <input\n                                type=\"text\"\n                                name=\"assigned_user\"\n                                placeholder=\"User\"\n                                onChange={this.onAssignedUser}\n                                value={this.state.assigned_user}\n                            />\n                        </div>\n                        <div className=\"buttons-container\">\n                            <button id=\"cancel-btn\" onClick={this.onCancel}>\n                                Cancel\n                            </button>\n                            <button id=\"save-btn\">Save</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskForm\n","import { React, Component } from \"react\"\nimport TaskForm from \"./TaskForm\"\nimport {\n    addTask,\n    removeTask,\n    editTask,\n    fetchTask,\n    deleteTask,\n} from \"../actions/task\"\n\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\"\n\nimport { connect } from \"react-redux\"\n\nclass Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggleForm: false,\n            selectedTask: {},\n        }\n    }\n\n    handleShowForm = () => {\n        this.setState({\n            toggleForm: true,\n        })\n    }\n\n    handleEdit = (id) => {\n        const selectedTask = this.props.task_payload.find(\n            (task) => task.id === id\n        )\n        this.setState({\n            selectedTask,\n            toggleForm: true,\n        })\n    }\n    handleRemove = (id) => {\n        this.props.deleteTask(id)\n    }\n    componentDidMount() {\n        this.props.fetchTask()\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"main-container\">\n                    <div className=\"first-container\">\n                        <div className=\"task-count\">\n                            <h4>Tasks</h4> {this.props.task_payload.length}\n                        </div>\n                        <div className=\"task-button\">\n                            <button onClick={this.handleShowForm}>\n                                Add Task\n                            </button>\n                        </div>\n                    </div>\n\n                    {!this.state.toggleForm ? (\n                        <div></div>\n                    ) : (\n                        <TaskForm\n                            task={this.state.selectedTask}\n                            toggleClosed={(val) => this.setState(val)}\n                            onSubmit={(task_payload) => {\n                                Object.keys(this.state.selectedTask).length ===\n                                0\n                                    ? this.props.dispatch(addTask(task_payload))\n                                    : this.props.dispatch(\n                                          editTask(\n                                              task_payload.id,\n                                              task_payload\n                                          )\n                                      )\n                            }}\n                        />\n                    )}\n\n                    <div className=\"task-lists-container\">\n                        <div className=\"task-lists\">\n                            {this.props.task_payload.map((val, index) => (\n                                <div className=\"list\" key={index}>\n                                    <label>{val.task_msg}</label>\n                                    <label>{val.task_date}</label>\n\n                                    <button\n                                        className=\"list-edit-btn\"\n                                        onClick={() => this.handleEdit(val.id)}\n                                    >\n                                        <PencilSquare />\n                                    </button>\n                                    <button\n                                        className=\"list-delete-btn\"\n                                        onClick={() =>\n                                            this.handleRemove(val.id)\n                                        }\n                                    >\n                                        <Trash />\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        task_payload: state.task_payload,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // This function will be available in component as `this.props.fetchTask`\n        fetchTask: function () {\n            dispatch(fetchTask())\n        },\n        deleteTask: function (id) {\n            dispatch(deleteTask(id))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)\n","import axios from \"axios\"\nexport async function login(payload) {\n    const config = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n    }\n    try {\n        const res = await axios.post(\n            \"https://stage.api.sloovi.com/login\",\n            payload,\n            config\n        )\n\n        localStorage.setItem(\n            \"login\",\n            JSON.stringify({\n                login: true,\n                token: res.data.results.token,\n            })\n        )\n    } catch (error) {\n        console.log(\"Post not created.\")\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { login } from \"../util/login\"\nimport { getUser } from \"../api/task\"\n\nexport const AuthContext = React.createContext()\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const [pending, setPending] = useState(true)\n    const payload = {\n        email: \"spicebluetest1@gmail.com\",\n        password: \"12345678\",\n    }\n\n    useEffect(() => {\n        if (login(payload)) {\n            getUser().then((result) => {\n                setCurrentUser(result)\n                setPending(false)\n            })\n        }\n    }, [])\n\n    if (pending) {\n        return <div className=\"loader\"></div>\n    }\n\n    return (\n        <AuthContext.Provider value={{ currentUser }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import \"./App.css\"\nimport configStore from \"./store/configStore\"\nimport { Provider } from \"react-redux\"\nimport { getAllTask } from \"./api/task\"\nimport { addTask } from \"./actions/task\"\nimport Task from \"./components/Task\"\n\nimport { AuthProvider } from \"./util/Auth\"\n\nconst store = configStore()\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <AuthProvider>\n                <Task />\n            </AuthProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport TaskReducer from \"../reducers/TaskReducer\"\nimport thunk from \"redux-thunk\"\n\nexport default () => {\n    const composeEnhancer =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        combineReducers({\n            task_payload: TaskReducer,\n        }),\n        composeEnhancer(applyMiddleware(thunk))\n    )\n    return store\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}