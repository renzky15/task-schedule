{"version":3,"sources":["reducers/TaskReducer.js","components/TaskForm.js","util/interceptor.js","actions/task.js","components/Task.js","util/login.js","api/task.js","util/Auth.js","App.js","store/configStore.js","index.js"],"names":["taskReducerDefaultState","state","action","type","task_payload","filter","id","map","updates","TaskForm","props","onDescriptionChange","e","task_msg","target","value","setState","onDateChange","task_date","onTimeChange","task_time","onAssignedUser","assigned_user","onFocusChange","focused","calendarFocused","onSubmit","preventDefault","error","console","log","format","parseInt","toggleClosed","toggleForm","onCancel","task","uuid","moment","currentUser","JSON","parse","localStorage","getItem","this","result","user_id","className","style","color","name","placeholder","autoFocus","onChange","date","numberOfMonths","disabled","onClick","Component","token","apiURL","axios","interceptors","request","use","config","headers","authorization","Promise","reject","Task","handleShowForm","handleEdit","selectedTask","find","handleRemove","deleteTask","fetchTask","length","val","Object","keys","postTask","putTask","index","connect","dispatch","a","get","res","data","results","payload","post","put","delete","Accept","setItem","stringify","login","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","pending","setPending","email","password","useEffect","getUser","then","Provider","store","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","TaskReducer","applyMiddleware","thunk","configStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f836438c.chunk.js","sourcesContent":["const taskReducerDefaultState = []\n\nexport default (state = taskReducerDefaultState, action) => {\n    switch (action.type) {\n        case \"ADD_TASK\":\n            return [...state, action.task_payload]\n        case \"FETCH_TASKS\":\n            return [...action.task_payload]\n        case \"REMOVE_TASK\":\n            return state.filter(({ id }) => id !== action.id)\n\n        case \"EDIT_TASK\":\n            return state.map((task_payload) => {\n                if (task_payload.id === action.id) {\n                    return {\n                        ...task_payload,\n                        ...action.updates,\n                    }\n                } else {\n                    return task_payload\n                }\n            })\n        default:\n            return state\n    }\n}\n","import React, { Component } from \"react\"\nimport { SingleDatePicker } from \"react-dates\"\nimport moment from \"moment\"\nimport * as uuid from \"uuid\"\n\nimport \"react-dates/lib/css/_datepicker.css\"\nimport \"react-dates/initialize\"\n\nexport class TaskForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.task ? props.task.id : uuid(),\n            task_msg: props.task ? props.task.task_msg : \"\",\n            task_date: props.task ? moment(props.task.task_date) : moment(),\n            task_time: props.task ? props.task.task_time : 0,\n            assigned_user: props.task ? props.task.assigned_user : \"\",\n            calendarFocused: false,\n        }\n    }\n    onDescriptionChange = (e) => {\n        const task_msg = e.target.value\n        this.setState(() => ({ task_msg }))\n    }\n    onDateChange = (task_date) => {\n        if (task_date) {\n            this.setState(() => ({ task_date }))\n        }\n    }\n    onTimeChange = (e) => {\n        const task_time = e.target.value\n        this.setState(() => ({ task_time }))\n    }\n\n    onAssignedUser = (e) => {\n        const assigned_user = e.target.value\n        this.setState(() => ({ assigned_user }))\n    }\n\n    onFocusChange = ({ focused }) => {\n        this.setState(() => ({ calendarFocused: focused }))\n    }\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!this.state.task_date || !this.state.task_time) {\n            this.setState(() => ({\n                error: \"Please provide date and time.\",\n            }))\n        } else {\n            this.setState(() => ({ error: \"\" }))\n            console.log(\"Form submitted!\")\n\n            this.props.onSubmit({\n                task_date: this.state.task_date.format(\"YYYY-MM-DD\"),\n                task_msg: this.state.task_msg,\n                task_time: parseInt(this.state.task_time),\n                assigned_user: this.state.assigned_user,\n            })\n            this.props.toggleClosed({\n                toggleForm: false,\n            })\n            this.setState(() => ({}))\n        }\n    }\n    onCancel = () => {\n        this.props.toggleClosed({\n            toggleForm: false,\n        })\n        this.setState(() => ({}))\n    }\n    componentDidMount() {\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\n        this.setState({\n            currentUser,\n            assigned_user: currentUser.result.user_id,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"task-form-container\">\n                    {this.state.error && (\n                        <p style={{ color: \"red\" }}>{this.state.error}</p>\n                    )}\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"desc-container\">\n                            <label>Task Description</label>\n                            <input\n                                type=\"test\"\n                                name=\"task_msg\"\n                                placeholder=\"Description\"\n                                autoFocus\n                                onChange={this.onDescriptionChange}\n                                value={this.state.task_msg}\n                            />\n                        </div>\n                        <div className=\"date-time-container\">\n                            <div className=\"date-container\">\n                                <label>Date</label>\n                                <SingleDatePicker\n                                    date={this.state.task_date}\n                                    onDateChange={this.onDateChange}\n                                    focused={this.state.calendarFocused}\n                                    onFocusChange={this.onFocusChange}\n                                    numberOfMonths={1}\n                                />\n                            </div>\n                            <div className=\"time-container\">\n                                <label>Time</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"task_time\"\n                                    placeholder=\"Time\"\n                                    onChange={this.onTimeChange}\n                                    value={this.state.task_time}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"assign-user-container\">\n                            <label>Assign User</label>\n                            <input\n                                type=\"text\"\n                                name=\"assigned_user\"\n                                placeholder=\"User\"\n                                onChange={this.onAssignedUser}\n                                value={this.state.assigned_user}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"buttons-container\">\n                            <button id=\"cancel-btn\" onClick={this.onCancel}>\n                                Cancel\n                            </button>\n                            <button id=\"save-btn\">Save</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskForm\n","import axios from \"axios\"\nconst token = JSON.parse(localStorage.getItem(\"login\"))\nexport default () => {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n}\n","// ADD Task\n\nimport axios from \"axios\"\nimport interceptor from \"../util/interceptor\"\nconst apiURL = \"https://stage.api.sloovi.com\"\n\ninterceptor()\n// export const addTask = ({\n//     id = uuid(),\n//     assigned_user = \"\",\n//     task_date = \"\",\n//     task_time = 0,\n//     task_msg = \"\",\n// } = {}) => ({\n//     type: \"ADD_TASK\",\n//     task_payload: {\n//         id,\n//         assigned_user,\n//         task_date,\n//         task_time,\n//         task_msg,\n//     },\n// })\n// // REMOVE Task\n// export const removeTask = ({ id } = {}) => ({\n//     type: \"REMOVE_TASK\",\n//     id,\n// })\n\n// export const editTask = (id, updates) => ({\n//     type: \"EDIT_TASK\",\n//     id,\n//     updates,\n// })\n\nexport function fetchTask() {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.get(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4`\n            )\n            dispatch({\n                type: \"FETCH_TASKS\",\n                task_payload: res.data.results,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n\nexport function postTask(payload) {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.post(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4`,\n                payload\n            )\n            dispatch({\n                type: \"ADD_TASK\",\n                task_payload: payload,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\nexport function putTask(id, payload) {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.put(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4/${id}`,\n                payload\n            )\n            dispatch({\n                type: \"EDIT_TASK\",\n                updates: payload,\n                id,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n\nexport function deleteTask(id) {\n    // Instead of plain objects, we are returning function.\n    return async function (dispatch) {\n        try {\n            const res = await axios.delete(\n                `${apiURL}/task/lead_59a79b6cb211449f9698bad058a593e4/${id}`\n            )\n            dispatch({\n                type: \"REMOVE_TASK\",\n                id,\n            })\n\n            console.log(res.data.results)\n        } catch (error) {\n            console.log(\"Error.\")\n        }\n    }\n}\n","import { React, Component } from \"react\"\nimport TaskForm from \"./TaskForm\"\nimport { postTask, putTask, fetchTask, deleteTask } from \"../actions/task\"\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\"\nimport { connect } from \"react-redux\"\n\nclass Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggleForm: false,\n            selectedTask: {},\n        }\n    }\n\n    handleShowForm = () => {\n        this.setState({\n            toggleForm: true,\n        })\n    }\n\n    handleEdit = (id) => {\n        const selectedTask = this.props.task_payload.find(\n            (task) => task.id === id\n        )\n        this.setState({\n            selectedTask,\n            toggleForm: true,\n        })\n    }\n    handleRemove = (id) => {\n        this.props.deleteTask(id)\n    }\n    componentDidMount() {\n        this.props.fetchTask()\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"main-container\">\n                    <div className=\"first-container\">\n                        <div className=\"task-count\">\n                            <h4>Tasks</h4> {this.props.task_payload.length}\n                        </div>\n                        <div className=\"task-button\">\n                            <button onClick={this.handleShowForm}>\n                                Add Task\n                            </button>\n                        </div>\n                    </div>\n\n                    {!this.state.toggleForm ? (\n                        <div></div>\n                    ) : (\n                        <TaskForm\n                            task={this.state.selectedTask}\n                            toggleClosed={(val) => this.setState(val)}\n                            onSubmit={(task_payload) => {\n                                Object.keys(this.state.selectedTask).length ===\n                                0\n                                    ? this.props.postTask(task_payload)\n                                    : this.props.putTask(\n                                          this.state.selectedTask.id,\n                                          task_payload\n                                      )\n                            }}\n                        />\n                    )}\n\n                    <div className=\"task-lists-container\">\n                        {this.props.task_payload.map((val, index) => (\n                            <div key={index} className=\"task-lists\">\n                                <div className=\"list\">\n                                    <label>{val.task_msg}</label>\n                                    <label id=\"date-label\">\n                                        {val.task_date}\n                                    </label>\n                                </div>\n                                <div className=\"btn-list\">\n                                    <button\n                                        className=\"list-edit-btn\"\n                                        onClick={() => this.handleEdit(val.id)}\n                                    >\n                                        <PencilSquare />\n                                    </button>\n                                    <button\n                                        className=\"list-delete-btn\"\n                                        onClick={() =>\n                                            this.handleRemove(val.id)\n                                        }\n                                    >\n                                        <Trash />\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        task_payload: state.task_payload,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // This function will be available in component as `this.props.fetchTask`\n        fetchTask: function () {\n            dispatch(fetchTask())\n        },\n        postTask: function (task_payload) {\n            dispatch(postTask(task_payload))\n        },\n        putTask: function (id, task_payload) {\n            dispatch(putTask(id, task_payload))\n        },\n        deleteTask: function (id) {\n            dispatch(deleteTask(id))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)\n","import axios from \"axios\"\nexport async function login(payload) {\n    const config = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n    }\n    try {\n        const res = await axios.post(\n            \"https://stage.api.sloovi.com/login\",\n            payload,\n            config\n        )\n\n        localStorage.setItem(\n            \"login\",\n            JSON.stringify({\n                login: true,\n                token: res.data.results.token,\n            })\n        )\n    } catch (error) {\n        console.log(\"Post not created.\")\n    }\n}\n","import axios from \"axios\"\n\nconst apiURL = \"https://stage.api.sloovi.com\"\nconst token = JSON.parse(localStorage.getItem(\"login\"))\nexport async function getUser() {\n    axios.interceptors.request.use(\n        (config) => {\n            config.headers.authorization = `Bearer ${token.token}`\n\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n\n    try {\n        const res = await axios.get(`${apiURL}/user`)\n\n        return res.data.results\n    } catch (error) {\n        console.log(\"Error.\")\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { login } from \"../util/login\"\nimport { getUser } from \"../api/task\"\n\nexport const AuthContext = React.createContext()\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const [pending, setPending] = useState(true)\n    const payload = {\n        email: \"spicebluetest1@gmail.com\",\n        password: \"12345678\",\n    }\n\n    useEffect(() => {\n        if (login(payload)) {\n            getUser().then((result) => {\n                setCurrentUser(result)\n                setPending(false)\n                localStorage.setItem(\n                    \"currentUser\",\n                    JSON.stringify({\n                        result,\n                    })\n                )\n            })\n        }\n    }, [])\n\n    if (pending) {\n        return <div className=\"loader\"></div>\n    }\n\n    return (\n        <AuthContext.Provider value={{ currentUser }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import \"./App.css\"\nimport configStore from \"./store/configStore\"\nimport { Provider } from \"react-redux\"\n\nimport Task from \"./components/Task\"\n\nimport { AuthProvider } from \"./util/Auth\"\n\nconst store = configStore()\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <AuthProvider>\n                <Task />\n            </AuthProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport TaskReducer from \"../reducers/TaskReducer\"\nimport thunk from \"redux-thunk\"\n\nexport default () => {\n    const composeEnhancer =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        combineReducers({\n            task_payload: TaskReducer,\n        }),\n        composeEnhancer(applyMiddleware(thunk))\n    )\n    return store\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}